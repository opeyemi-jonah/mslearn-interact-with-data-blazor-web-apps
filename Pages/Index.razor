@page "/"
@using BlazingPizza.Services
@using BlazingPizza
@inject OrderState orderstate
@inject PizzaService PizzaSvc
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager


<div class="main">
    <h1>Blazing Pizzas</h1>

    @if (specials == null)
    {
        <p>We're finding out what pizzas are available today...</p>
    }
    else
    {
        <!-- This markup will be rendered once the pizzas are loaded -->
        <ul class="pizza-cards">
            @if (specials != null)
            {
                @foreach (var special in specials)
                {
                    <li @onclick="@(() => orderstate.ShowConfigurePizzaDialog(special))" style="background-image: url('@special.ImageUrl')">
                        <div class="pizza-info">
                            <span class="title">@special.Name</span>
                            @special.Description
                            <span class="price">@special.GetFormattedBasePrice()</span>
                        </div>
                    </li>
                }
            }
        </ul>
    }
</div>

@if (orderstate.ShowingConfigureDialog)
{
    <ConfigurePizzaDialog
      Pizza="orderstate.ConfiguringPizza"
      OnCancel="orderstate.CancelConfigurePizzaDialog"
      OnConfirm="orderstate.ConfirmConfigurePizzaDialog" />
}


@code {
    List<PizzaSpecial> specials = new List<PizzaSpecial>();
     protected override async Task OnInitializedAsync()
    {
        specials = await HttpClient.GetFromJsonAsync<List<PizzaSpecial>>(NavigationManager.BaseUri + "specials");

    }
}